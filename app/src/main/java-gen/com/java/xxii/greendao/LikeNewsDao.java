package com.java.xxii.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.java.xxii.greendao.LikeNews;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table LIKE_NEWS.
*/
public class LikeNewsDao extends AbstractDao<LikeNews, String> {

    public static final String TABLENAME = "LIKE_NEWS";

    /**
     * Properties of entity LikeNews.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property News_Id = new Property(0, String.class, "News_Id", true, "NEWS__ID");
        public final static Property News_Title = new Property(1, String.class, "News_Title", false, "NEWS__TITLE");
        public final static Property News_Time = new Property(2, String.class, "News_Time", false, "NEWS__TIME");
        public final static Property News_Img = new Property(3, String.class, "News_Img", false, "NEWS__IMG");
        public final static Property News_Intro = new Property(4, String.class, "News_Intro", false, "NEWS__INTRO");
        public final static Property Add_Time = new Property(5, long.class, "add_Time", false, "ADD__TIME");
    };


    public LikeNewsDao(DaoConfig config) {
        super(config);
    }
    
    public LikeNewsDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'LIKE_NEWS' (" + //
                "'NEWS__ID' TEXT PRIMARY KEY NOT NULL ," + // 0: News_Id
                "'NEWS__TITLE' TEXT NOT NULL ," + // 1: News_Title
                "'NEWS__TIME' TEXT NOT NULL ," + // 2: News_Time
                "'NEWS__IMG' TEXT NOT NULL ," + // 3: News_Img
                "'NEWS__INTRO' TEXT," + // 4: News_Intro
                "'ADD__TIME' INTEGER NOT NULL );"); // 5: add_Time
        // Add Indexes
        db.execSQL("CREATE INDEX " + constraint + "IDX_LIKE_NEWS_ADD__TIME ON LIKE_NEWS" +
                " (ADD__TIME);");
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'LIKE_NEWS'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, LikeNews entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getNews_Id());
        stmt.bindString(2, entity.getNews_Title());
        stmt.bindString(3, entity.getNews_Time());
        stmt.bindString(4, entity.getNews_Img());
 
        String News_Intro = entity.getNews_Intro();
        if (News_Intro != null) {
            stmt.bindString(5, News_Intro);
        }
        stmt.bindLong(6, entity.getAdd_Time());
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public LikeNews readEntity(Cursor cursor, int offset) {
        LikeNews entity = new LikeNews( //
            cursor.getString(offset + 0), // News_Id
            cursor.getString(offset + 1), // News_Title
            cursor.getString(offset + 2), // News_Time
            cursor.getString(offset + 3), // News_Img
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // News_Intro
            cursor.getLong(offset + 5) // add_Time
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, LikeNews entity, int offset) {
        entity.setNews_Id(cursor.getString(offset + 0));
        entity.setNews_Title(cursor.getString(offset + 1));
        entity.setNews_Time(cursor.getString(offset + 2));
        entity.setNews_Img(cursor.getString(offset + 3));
        entity.setNews_Intro(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setAdd_Time(cursor.getLong(offset + 5));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(LikeNews entity, long rowId) {
        return entity.getNews_Id();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(LikeNews entity) {
        if(entity != null) {
            return entity.getNews_Id();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
